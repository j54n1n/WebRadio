<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="io.github.j54n1n.webradio">

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        android:theme="@style/AppTheme">
        <meta-data
            android:name="com.google.android.gms.car.application"
            android:resource="@xml/automotive_app_desc" />

        <activity
            android:name=".MainActivity"
            android:theme="@style/AppTheme.NoActionBar">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!--
             (OPTIONAL) use this meta data to indicate which icon should be
             used in Android Auto media notifications (for example, when the
             music changes and the user is looking at another app)
        -->
        <!--
            <meta-data
            android:name="com.google.android.gms.car.notification.SmallIcon"
            android:resource="@drawable/ic_notification" />
        -->


        <!--
             (OPTIONAL) use this meta data to override the theme from which Android Auto will
             look for colors. If you don't set this, Android Auto will look
             for color attributes in your application theme.
        -->
        <!--
            <meta-data
            android:name="com.google.android.gms.car.application.theme"
            android:resource="@style/CarTheme" />
        -->


        <!--
             Main music service, provides media browsing and media playback services to consumers
             through MediaBrowserService and MediaSession. Consumers connect to it through
             MediaBrowser (for browsing) and MediaController (for play session control)
        -->
        <service
            android:name=".PlaybackService"
            android:enabled="true"
            android:exported="true">
            <intent-filter>
                <action android:name="android.media.browse.MediaBrowserService" />
            </intent-filter>
        </service>

        <!--
             MediaSession, prior to API 21, uses a broadcast receiver to communicate with a
             media session. It does not have to be this broadcast receiver, but it must
             handle the action "android.intent.action.MEDIA_BUTTON".
             Additionally, this is used to resume the service from an inactive state upon
             receiving a media button event (such as "play").
        -->
        <receiver android:name="android.support.v4.media.session.MediaButtonReceiver">
            <intent-filter>
                <action android:name="android.intent.action.MEDIA_BUTTON" />
            </intent-filter>
        </receiver>

    </application>

</manifest>